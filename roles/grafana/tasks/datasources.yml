---

# Get existing datasources
- name: datasources > Retrieve datasources
  uri:
    url: "{{ manala_grafana_api_url }}/api/datasources"
    force_basic_auth: true
    user: "{{ manala_grafana_api_user }}"
    password: "{{ manala_grafana_api_password }}"
    return_content: true
  register: __manala_grafana_datasources_output
  until: __manala_grafana_datasources_output is not failed
  retries: 12
  delay: 1

# Update existing datasources
- name: datasources > Update datasources
  register: __manala_grafana_datasources_update_output
  failed_when: "'Datasource updated' not in __manala_grafana_datasources_update_output|to_json"
  uri:
    url: "{{ manala_grafana_api_url }}/api/datasources/{{ item[0].id }}"
    method: PUT
    body: "{{ item[1]|to_json }}"
    force_basic_auth: true
    user: "{{ manala_grafana_api_user }}"
    password: "{{ manala_grafana_api_password }}"
    status_code: 200
    headers:
      Content-Type: application/json
  loop: "{{
    __manala_grafana_datasources_output.json|default([])
      | product(manala_grafana_datasources)
      | list
    }}"
  when: item[0].name == item[1].name

# Create non existing datasources
- name: datasources > Create datasources
  register: __manala_grafana_datasources_create_output
  failed_when: "'Datasource added' not in __manala_grafana_datasources_create_output|to_json"
  uri:
    url: "{{ manala_grafana_api_url }}/api/datasources"
    method: POST
    body: '{{ item|to_json }}'
    force_basic_auth: true
    user: "{{ manala_grafana_api_user }}"
    password: "{{ manala_grafana_api_password }}"
    status_code: 200
    headers:
      Content-Type: application/json
  loop: "{{ manala_grafana_datasources }}"
  when: item.name not in __manala_grafana_datasources_output.json|map(attribute='name')|list

# Delete non added datasources
- name: datasources > Delete datasources
  register: __manala_grafana_datasources_delete_output
  failed_when: "'Data source deleted' not in __manala_grafana_datasources_delete_output.json.message"
  uri:
    url: "{{ manala_grafana_api_url }}/api/datasources/{{ item.id }}"
    method: DELETE
    force_basic_auth: true
    user: "{{ manala_grafana_api_user }}"
    password: "{{ manala_grafana_api_password }}"
    status_code: 200
    headers:
      Content-Type: application/json
  loop: "{{ __manala_grafana_datasources_output.json|default([]) }}"
  when:
    - manala_grafana_datasources_exclusive
    - item.name not in manala_grafana_datasources|map(attribute='name')|list
