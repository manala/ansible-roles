{%- import '_macros.j2' as macros with context -%}

{% set config = manala_telegraf_config -%}

{% set config_global_tags = [] -%}
{% set config_agent = [] -%}

{%- for configs in config -%}
    {%- for config_name, config_parameters in configs.items() -%}
        {%- if config_name == 'global_tags' -%}
            {%- if config_global_tags.extend(config_parameters) -%}{%- endif -%}
        {%- elif config_name == 'agent' -%}
            {%- if config_agent.extend(config_parameters) -%}{%- endif -%}
        {%- endif -%}
    {%- endfor -%}
{%- endfor -%}

# Telegraf Configuration
#
# Telegraf is entirely plugin driven. All metrics are gathered from the
# declared inputs, and sent to the declared outputs.
#
# Plugins must be declared in here to be active.
# To deactivate a plugin, comment out the name and any variables.
#
# Use 'telegraf -config telegraf.conf -test' to see what metrics a config
# file would generate.
#
# Environment variables can be used anywhere in this config file, simply surround
# them with ${}. For strings the variable must be within quotes (ie, "${STR_VAR}"),
# for numbers and booleans they should be plain (ie, ${INT_VAR}, ${BOOL_VAR})


# Global tags can be specified here in key="value" format.
[global_tags]
  # dc = "us-east-1" # will tag all metrics with dc=us-east-1
  # rack = "1a"
  ## Environment variables can be used as tags, and throughout the config file
  # user = "$USER"
{{ macros.config(config_global_tags, [], 2) }}

# Configuration for telegraf agent
[agent]
  ## Default data collection interval for all inputs
  {{ macros.config_row(config_agent, 'interval', '10s') }}
  ## Rounds collection interval to 'interval'
  ## ie, if interval="10s" then always collect on :00, :10, :20, etc.
  {{ macros.config_row(config_agent, 'round_interval', true) }}

  ## Telegraf will send metrics to outputs in batches of at most
  ## metric_batch_size metrics.
  ## This controls the size of writes that Telegraf sends to output plugins.
  {{ macros.config_row(config_agent, 'metric_batch_size', 1000) }}

  ## Maximum number of unwritten metrics per output.
  {{ macros.config_row(config_agent, 'metric_buffer_limit', 10000) }}

  ## Collection jitter is used to jitter the collection by a random amount.
  ## Each plugin will sleep for a random time within jitter before collecting.
  ## This can be used to avoid many plugins querying things like sysfs at the
  ## same time, which can have a measurable effect on the system.
  {{ macros.config_row(config_agent, 'collection_jitter', '0s') }}

  ## Default flushing interval for all outputs. Maximum flush_interval will be
  ## flush_interval + flush_jitter
  {{ macros.config_row(config_agent, 'flush_interval', '10s') }}
  ## Jitter the flush interval by a random amount. This is primarily to avoid
  ## large write spikes for users running a large number of telegraf instances.
  ## ie, a jitter of 5s and interval 10s means flushes will happen every 10-15s
  {{ macros.config_row(config_agent, 'flush_jitter', '0s') }}

  ## By default or when set to "0s", precision will be set to the same
  ## timestamp order as the collection interval, with the maximum being 1s.
  ##   ie, when interval = "10s", precision will be "1s"
  ##       when interval = "250ms", precision will be "1ms"
  ## Precision will NOT be used for service inputs. It is up to each individual
  ## service input to set the timestamp at the appropriate precision.
  ## Valid time units are "ns", "us" (or "Âµs"), "ms", "s".
  {{ macros.config_row(config_agent, 'precision', '') }}

  ## Log at debug level.
  {{ macros.config_row(config_agent, 'debug', '# debug = false', 0, true) }}
  ## Log only error level messages.
  {{ macros.config_row(config_agent, 'quiet', '# quiet = false', 0, true) }}
  ## Log file name, the empty string means to log to stderr.
  {{ macros.config_row(config_agent, 'logfile', '# logfile = ""', 0, true) }}
  ## The logfile will be rotated after the time interval specified.  When set
  ## to 0 no time based rotation is performed.
  {{ macros.config_row(config_agent, 'logfile_rotation_interval', '# logfile_rotation_interval = "0d"', 0, true) }}

  ## The logfile will be rotated when it becomes larger than the specified
  ## size.  When set to 0 no size based rotation is performed.
  # logfile_rotation_max_size = "0MB"
  {{ macros.config_row(config_agent, 'logfile_rotation_max_size', '# logfile_rotation_max_size = "0MB"', 0, true) }}

  ## Maximum number of rotated archives to keep, any older logs are deleted.
  ## If set to -1, no archives are removed.
  # logfile_rotation_max_archives = 5
  {{ macros.config_row(config_agent, 'logfile_rotation_max_archives', '# logfile_rotation_max_archives = 5', 0, true) }}

  ## Override default hostname, if empty use os.Hostname()
  {{ macros.config_row(config_agent, 'hostname', '') }}
  ## If set to true, do no set the "host" tag in the telegraf agent.
  {{ macros.config_row(config_agent, 'omit_hostname', false) }}
