---

###########
# Default #
###########

- name: Default
  tags: [default]
  hosts: debian
  vars:
    tests_dir: /molecule/bind/default
  tasks:
    - name: Clean tests dir
      ansible.builtin.file:  # noqa: risky-file-permissions
        path: "{{ tests_dir }}"
        state: "{{ item }}"
      loop: [absent, directory]
    - block:  # noqa: name[missing]
        - name: Role
          ansible.builtin.import_role:
            name: manala.roles.bind
          vars:
            manala_bind_log_dir: "{{ tests_dir }}/log"
      always:
        - name: Goss
          ansible.builtin.command:
            cmd: goss --gossfile - validate
            stdin: "{{ lookup('ansible.builtin.template', 'goss/default.yaml.j2') }}"
          changed_when: false

###########
# Options #
###########

- name: Options
  tags: [options]
  hosts: debian
  vars:
    tests_file: /molecule/bind/options
  tasks:
    - name: Clean tests file
      ansible.builtin.file:  # noqa: risky-file-permissions
        path: "{{ tests_file }}"
        state: "{{ item }}"
      loop: [absent, touch]
    - block:  # noqa: name[missing]
        - name: Role
          ansible.builtin.import_role:
            name: manala.roles.bind
          vars:
            manala_bind_options_file: "{{ tests_file }}"
            manala_bind_options:
              - -u {{ manala_bind_user }}
              - -4  # IPv4 only
      always:
        - name: Goss
          ansible.builtin.command:
            cmd: goss --gossfile - validate
            stdin: "{{ lookup('ansible.builtin.template', 'goss/options.yaml.j2') }}"
          changed_when: false

###########
# Configs #
###########

- name: Configs
  tags: [configs]
  hosts: debian
  vars:
    tests_dir: /molecule/bind/configs
  tasks:
    - name: Clean tests dir
      ansible.builtin.file:  # noqa: risky-file-permissions
        path: "{{ tests_dir }}"
        state: "{{ item }}"
      loop: [absent, directory]
    - name: Touch existing files
      ansible.builtin.file:  # noqa: risky-file-permissions
        path: "{{ tests_dir }}/{{ item }}"
        state: touch
      loop: [state_absent_existing]
    - block:  # noqa: name[missing]
        - name: Role
          ansible.builtin.import_role:
            name: manala.roles.bind
          vars:
            manala_bind_configs_dir: "{{ tests_dir }}"
            manala_bind_configs:
              - file: template
                template: fixtures/template.j2
              - file: content
                content: |
                  Content
              - file: state_absent_existing
                state: absent
              - file: omit
                content: |
                  Omit
                omit: true
      always:
        - name: Goss
          ansible.builtin.command:
            cmd: goss --gossfile - validate
            stdin: "{{ lookup('ansible.builtin.template', 'goss/configs.yaml.j2') }}"
          changed_when: false

#########
# Zones #
#########

- name: Zones
  tags: [zones]
  hosts: debian
  vars:
    tests_dir: /molecule/bind/zones
  tasks:
    - name: Clean tests dir
      ansible.builtin.file:  # noqa: risky-file-permissions
        path: "{{ tests_dir }}"
        state: "{{ item }}"
      loop: [absent, directory]
    - name: Touch existing files
      ansible.builtin.file:  # noqa: risky-file-permissions
        path: "{{ tests_dir }}/{{ item }}"
        state: touch
      loop: [db.state_absent_existing, db.dynamic_existing]
    - block:  # noqa: name[missing]
        - name: Role
          ansible.builtin.import_role:
            name: manala.roles.bind
          vars:
            manala_bind_zones_dir: "{{ tests_dir }}"
            manala_bind_zones:
              - zone: template
                template: fixtures/template.j2
              - zone: content
                content: |
                  Content
              - zone: state_absent_existing
                state: absent
              - zone: omit
                content: |
                  Omit
                omit: true
              - zone: dynamic
                content: |
                  Dynamic
                dynamic: true
              - zone: dynamic_existing
                content: |
                  Dynamic existing
                dynamic: true
      always:
        - name: Goss
          ansible.builtin.command:
            cmd: goss --gossfile - validate
            stdin: "{{ lookup('ansible.builtin.template', 'goss/zones.yaml.j2') }}"
          changed_when: false

#################
# Zones Records #
#################

- name: Zones Records
  tags: [zones_records]
  hosts: debian
  tasks:
    - block:  # noqa: name[missing]
        - name: Role
          ansible.builtin.import_role:
            name: manala.roles.bind
          vars:
            manala_bind_configs:
              - file: named.conf.local
                content: |
                  zone "foo.local" {
                      type master;
                      file "{{ 'foo.local' | manala.roles.bind_zone_file }}";
                      allow-update { 127.0.0.1; };
                  };
            manala_bind_zones:
              - zone: foo.local
                dynamic: true
                content: |
                  @  IN SOA ns.foo.local. contact.foo.local. (
                              1       ; serial
                              604800  ; refresh (1 week)
                              86400   ; retry (1 day)
                              2419200 ; expire (4 weeks)
                              86400   ; minimum (1 day)
                              )
                  @  IN NS  ns.foo.local.
                  ns IN A   172.16.1.1
                records:
                  - {record: bar, value: 172.16.1.123}
      always:
        - name: Packages
          ansible.builtin.apt:
            name: [bind9-host]
            install_recommends: false
            update_cache: true
            cache_valid_time: 3600
        - name: Goss
          ansible.builtin.command:
            cmd: goss --gossfile - validate
            stdin: "{{ lookup('ansible.builtin.template', 'goss/zones_records.yaml.j2') }}"
          changed_when: false
